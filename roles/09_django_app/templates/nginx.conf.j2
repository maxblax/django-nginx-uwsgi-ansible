# Nginx Configuration for {{ env_name }} environment
# {{ ansible_managed }}

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

    # Upstream to Django app
    upstream django_app {
        least_conn;
        server app:8000 max_fails=3 fail_timeout=30s;
    }

    # HTTP Server
    server {
        listen 80;
        server_name {{ env_domain.domain }}{% if env_domain.additional_domains is defined %} {{ env_domain.additional_domains | join(' ') }}{% endif %};

        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

{% if project_config.ssl.enabled %}
        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
{% else %}
        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Media files
        location /media/ {
            alias /var/www/media/;
            expires 7d;
        }

        # Proxy to Django
        location / {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # Timeouts
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;

            # Rate limiting
            limit_req zone=general burst=30 nodelay;
        }

        # API rate limiting
        location /api/ {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            limit_req zone=api burst=100 nodelay;
        }

{% if env_services.flower[env_name].enabled %}
        # Flower monitoring (Celery)
        location /flower/ {
            proxy_pass http://flower:5555/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
{% endif %}
{% endif %}
    }

{% if project_config.ssl.enabled %}
    # HTTPS Server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name {{ env_domain.domain }}{% if env_domain.additional_domains is defined %} {{ env_domain.additional_domains | join(' ') }}{% endif %};

        # SSL Certificate paths
        ssl_certificate /etc/letsencrypt/live/{{ env_domain.domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ env_domain.domain }}/privkey.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # SSL session cache
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/{{ env_domain.domain }}/chain.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;

{% if project_config.security.ip_access_control.enabled %}
        # IP Access Control
{% for ip in project_config.security.ip_access_control.allowed_ips %}
        allow {{ ip }};
{% endfor %}
        deny all;

        # Custom 403 error page
        error_page 403 /403.html;
        location = /403.html {
            return 403 'Access Denied - Authorized IPs only';
            add_header Content-Type text/plain;
        }
{% endif %}

        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Media files
        location /media/ {
            alias /var/www/media/;
            expires 7d;
        }

        # Proxy to Django
        location / {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect off;

            # Timeouts
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;

            # Rate limiting
            limit_req zone=general burst=30 nodelay;
        }

        # API rate limiting
        location /api/ {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            limit_req zone=api burst=100 nodelay;
        }

{% if env_services.flower[env_name].enabled %}
        # Flower monitoring (Celery)
        location /flower/ {
            proxy_pass http://flower:5555/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
{% endif %}
    }
{% endif %}
}
